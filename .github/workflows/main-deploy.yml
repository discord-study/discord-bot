name: Deploy to Local Server

on:
  push:
    branches: [ "main", "feat/CICD" ]

jobs:
  build:
    name: Upload Docker
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create .env file
        run: echo "${{ secrets.ENV_FILE }}" > .env

      - name : dockerfile
        run: cat Dockerfile

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker buildx build --platform linux/amd64/v8,linux/amd64 -t ${{ secrets.DOCKER_USERNAME }}/server:latest .

      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/server:latest

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: executing remote ssh commands using ssh key
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/server:latest
            
            if [ "$(docker ps -aq -f name=discord-server)" ]
            then
              echo "[ discord-server is running ]"
              docker stop discord-server
              docker rm discord-server
            else
              echo "[ discord-server is not running ]"
            fi
            
            docker run -d --name discord-server ${{ secrets.DOCKER_USERNAME }}/server
